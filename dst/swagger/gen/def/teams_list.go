package def

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// TeamsList teams list
// swagger:model teams-list
type TeamsList []*TeamsListItems0

// Validate validates this teams list
func (m TeamsList) Validate(formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {

		if swag.IsZero(m[i]) { // not required
			continue
		}

		if m[i] != nil {

			if err := m[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// TeamsListItems0 teams list items0
// swagger:model TeamsListItems0
type TeamsListItems0 struct {

	// id
	ID int64 `json:"id,omitempty"`

	// members count
	MembersCount int64 `json:"members_count,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// organization
	Organization *TeamsListItems0Organization `json:"organization,omitempty"`

	// permission
	Permission string `json:"permission,omitempty"`

	// repos count
	ReposCount int64 `json:"repos_count,omitempty"`

	// url
	URL string `json:"url,omitempty"`
}

// Validate validates this teams list items0
func (m *TeamsListItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOrganization(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TeamsListItems0) validateOrganization(formats strfmt.Registry) error {

	if swag.IsZero(m.Organization) { // not required
		return nil
	}

	if m.Organization != nil {

		if err := m.Organization.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

// TeamsListItems0Organization teams list items0 organization
// swagger:model TeamsListItems0Organization
type TeamsListItems0Organization struct {

	// avatar url
	AvatarURL string `json:"avatar_url,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// login
	Login string `json:"login,omitempty"`

	// url
	URL string `json:"url,omitempty"`
}

// Validate validates this teams list items0 organization
func (m *TeamsListItems0Organization) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
