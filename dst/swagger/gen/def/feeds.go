package def

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// Feeds feeds
// swagger:model feeds
type Feeds struct {

	// links
	Links *FeedsLinks `json:"_links,omitempty"`

	// current user actor url
	CurrentUserActorURL string `json:"current_user_actor_url,omitempty"`

	// current user organization url
	CurrentUserOrganizationURL string `json:"current_user_organization_url,omitempty"`

	// current user public
	CurrentUserPublic string `json:"current_user_public,omitempty"`

	// current user url
	CurrentUserURL string `json:"current_user_url,omitempty"`

	// timeline url
	TimelineURL string `json:"timeline_url,omitempty"`

	// user url
	UserURL string `json:"user_url,omitempty"`
}

// Validate validates this feeds
func (m *Feeds) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Feeds) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.Links) { // not required
		return nil
	}

	if m.Links != nil {

		if err := m.Links.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

// FeedsLinks feeds links
// swagger:model FeedsLinks
type FeedsLinks struct {

	// current user
	CurrentUser *FeedsLinksCurrentUser `json:"current_user,omitempty"`

	// current user actor
	CurrentUserActor *FeedsLinksCurrentUserActor `json:"current_user_actor,omitempty"`

	// current user organization
	CurrentUserOrganization *FeedsLinksCurrentUserOrganization `json:"current_user_organization,omitempty"`

	// current user public
	CurrentUserPublic *FeedsLinksCurrentUserPublic `json:"current_user_public,omitempty"`

	// timeline
	Timeline *FeedsLinksTimeline `json:"timeline,omitempty"`

	// user
	User *FeedsLinksUser `json:"user,omitempty"`
}

// Validate validates this feeds links
func (m *FeedsLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCurrentUser(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCurrentUserActor(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCurrentUserOrganization(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCurrentUserPublic(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTimeline(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUser(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FeedsLinks) validateCurrentUser(formats strfmt.Registry) error {

	if swag.IsZero(m.CurrentUser) { // not required
		return nil
	}

	if m.CurrentUser != nil {

		if err := m.CurrentUser.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *FeedsLinks) validateCurrentUserActor(formats strfmt.Registry) error {

	if swag.IsZero(m.CurrentUserActor) { // not required
		return nil
	}

	if m.CurrentUserActor != nil {

		if err := m.CurrentUserActor.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *FeedsLinks) validateCurrentUserOrganization(formats strfmt.Registry) error {

	if swag.IsZero(m.CurrentUserOrganization) { // not required
		return nil
	}

	if m.CurrentUserOrganization != nil {

		if err := m.CurrentUserOrganization.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *FeedsLinks) validateCurrentUserPublic(formats strfmt.Registry) error {

	if swag.IsZero(m.CurrentUserPublic) { // not required
		return nil
	}

	if m.CurrentUserPublic != nil {

		if err := m.CurrentUserPublic.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *FeedsLinks) validateTimeline(formats strfmt.Registry) error {

	if swag.IsZero(m.Timeline) { // not required
		return nil
	}

	if m.Timeline != nil {

		if err := m.Timeline.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *FeedsLinks) validateUser(formats strfmt.Registry) error {

	if swag.IsZero(m.User) { // not required
		return nil
	}

	if m.User != nil {

		if err := m.User.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

// FeedsLinksCurrentUser feeds links current user
// swagger:model FeedsLinksCurrentUser
type FeedsLinksCurrentUser struct {

	// href
	Href string `json:"href,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this feeds links current user
func (m *FeedsLinksCurrentUser) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// FeedsLinksCurrentUserActor feeds links current user actor
// swagger:model FeedsLinksCurrentUserActor
type FeedsLinksCurrentUserActor struct {

	// href
	Href string `json:"href,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this feeds links current user actor
func (m *FeedsLinksCurrentUserActor) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// FeedsLinksCurrentUserOrganization feeds links current user organization
// swagger:model FeedsLinksCurrentUserOrganization
type FeedsLinksCurrentUserOrganization struct {

	// href
	Href string `json:"href,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this feeds links current user organization
func (m *FeedsLinksCurrentUserOrganization) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// FeedsLinksCurrentUserPublic feeds links current user public
// swagger:model FeedsLinksCurrentUserPublic
type FeedsLinksCurrentUserPublic struct {

	// href
	Href string `json:"href,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this feeds links current user public
func (m *FeedsLinksCurrentUserPublic) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// FeedsLinksTimeline feeds links timeline
// swagger:model FeedsLinksTimeline
type FeedsLinksTimeline struct {

	// href
	Href string `json:"href,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this feeds links timeline
func (m *FeedsLinksTimeline) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// FeedsLinksUser feeds links user
// swagger:model FeedsLinksUser
type FeedsLinksUser struct {

	// href
	Href string `json:"href,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this feeds links user
func (m *FeedsLinksUser) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
