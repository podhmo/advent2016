package def

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// CommitActivityStats commit activity stats
// swagger:model commitActivityStats
type CommitActivityStats []*CommitActivityStatsItems0

// Validate validates this commit activity stats
func (m CommitActivityStats) Validate(formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {

		if swag.IsZero(m[i]) { // not required
			continue
		}

		if m[i] != nil {

			if err := m[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// CommitActivityStatsItems0 commit activity stats items0
// swagger:model CommitActivityStatsItems0
type CommitActivityStatsItems0 struct {

	// days
	Days []int64 `json:"days"`

	// total
	Total int64 `json:"total,omitempty"`

	// week
	Week int64 `json:"week,omitempty"`
}

// Validate validates this commit activity stats items0
func (m *CommitActivityStatsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDays(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CommitActivityStatsItems0) validateDays(formats strfmt.Registry) error {

	if swag.IsZero(m.Days) { // not required
		return nil
	}

	return nil
}
