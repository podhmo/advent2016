package def

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// SearchRepositoriesByKeyword search repositories by keyword
// swagger:model search-repositories-by-keyword
type SearchRepositoriesByKeyword struct {

	// repositories
	Repositories []*SearchRepositoriesByKeywordRepositoriesItems0 `json:"repositories"`
}

// Validate validates this search repositories by keyword
func (m *SearchRepositoriesByKeyword) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRepositories(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SearchRepositoriesByKeyword) validateRepositories(formats strfmt.Registry) error {

	if swag.IsZero(m.Repositories) { // not required
		return nil
	}

	for i := 0; i < len(m.Repositories); i++ {

		if swag.IsZero(m.Repositories[i]) { // not required
			continue
		}

		if m.Repositories[i] != nil {

			if err := m.Repositories[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// SearchRepositoriesByKeywordRepositoriesItems0 search repositories by keyword repositories items0
// swagger:model SearchRepositoriesByKeywordRepositoriesItems0
type SearchRepositoriesByKeywordRepositoriesItems0 struct {

	// created
	Created string `json:"created,omitempty"`

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// followers
	Followers int64 `json:"followers,omitempty"`

	// fork
	Fork bool `json:"fork,omitempty"`

	// forks
	Forks int64 `json:"forks,omitempty"`

	// has downloads
	HasDownloads bool `json:"has_downloads,omitempty"`

	// has issues
	HasIssues bool `json:"has_issues,omitempty"`

	// has wiki
	HasWiki bool `json:"has_wiki,omitempty"`

	// homepage
	Homepage string `json:"homepage,omitempty"`

	// language
	Language string `json:"language,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// open issues
	OpenIssues int64 `json:"open_issues,omitempty"`

	// owner
	Owner string `json:"owner,omitempty"`

	// private
	Private bool `json:"private,omitempty"`

	// pushed
	Pushed string `json:"pushed,omitempty"`

	// pushed at
	PushedAt string `json:"pushed_at,omitempty"`

	// score
	Score float64 `json:"score,omitempty"`

	// size
	Size int64 `json:"size,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// url
	URL string `json:"url,omitempty"`

	// username
	Username string `json:"username,omitempty"`

	// watchers
	Watchers int64 `json:"watchers,omitempty"`
}

// Validate validates this search repositories by keyword repositories items0
func (m *SearchRepositoriesByKeywordRepositoriesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
