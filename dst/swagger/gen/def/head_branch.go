package def

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// HeadBranch head branch
// swagger:model headBranch
type HeadBranch struct {

	// object
	Object *HeadBranchObject `json:"object,omitempty"`

	// ref
	Ref string `json:"ref,omitempty"`

	// url
	URL string `json:"url,omitempty"`
}

// Validate validates this head branch
func (m *HeadBranch) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateObject(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HeadBranch) validateObject(formats strfmt.Registry) error {

	if swag.IsZero(m.Object) { // not required
		return nil
	}

	if m.Object != nil {

		if err := m.Object.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

// HeadBranchObject head branch object
// swagger:model HeadBranchObject
type HeadBranchObject struct {

	// sha
	Sha string `json:"sha,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// url
	URL string `json:"url,omitempty"`
}

// Validate validates this head branch object
func (m *HeadBranchObject) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
